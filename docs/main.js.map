{"version":3,"sources":["./src/app/cropper/cropper.component.ts","./src/app/cropper/cropper.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/pipes/safaresourceurl.pipe.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8K;AAE9I;;;;;;AAQzB,MAAM,gBAAgB;IAqB3B,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QARpC,sBAAiB,GAAsB,IAAI,0DAAY,EAAE,CAAC;QAIpE,gBAAW,GAAG,EAAE,CAAC;QAKf,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC7B,CAAC;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC/B,IAAI,CAAC,WAAW,GAAG,IAAI;SACxB;IACH,CAAC;IAED,eAAe;QAEb,IAAI,CAAC,OAAO,GAAG,IAAI,gDAAO,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE;YAC1D,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;YACf,WAAW,EAAE,CAAC;YACd,gBAAgB,EAAE,IAAI;YACtB,cAAc,EAAE,IAAI;YACpB,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,CAAC;YACX,IAAI,EAAE,GAAG,EAAE;gBACT,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC;gBAC/C,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;gBAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;YAC5C,CAAC;SACF,CAAC,CAAC;IAEL,CAAC;IAED,QAAQ;IACR,CAAC;IAID,eAAe,CAAC,KAAU;QACxB,iEAAiE;QACjE,2DAA2D;QAC3D;;WAEG;QACH,IAAI,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAChC,MAAM,CAAC,SAAS,GAAG,UAAU,CAAC;YAC5B,IAAI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YACxB,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,MAAgB,CAAC;YACtC,KAAK,CAAC,MAAM,GAAG,UAAU,EAAE;gBACzB,IAAI,MAAM,GAAsB,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gBAClE,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;gBAC3B,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;gBAC7B,IAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAClC,GAAG,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBAC3B,IAAI,gDAAO,CAAC,MAAM,CAAC;YACrB,CAAC;QACH,CAAC;IACH,CAAC;;gFA5EU,gBAAgB;gGAAhB,gBAAgB;;;;;;QCT7B,sEAAK;QACH,sEAAK;QACH,uEAAyE;;QAC3E,4DAAM;QACN,sEAAK;QACH,oEAAgC;QAChC,uDACF;;QAAA,4DAAM;QACN,uEAA8B;QARhC,4DAAK;;QAEa,0DAAiC;QAAjC,qNAAiC;QAG1C,0DAAwB;QAAxB,kJAAwB;QAC7B,0DACF;QADE,qJACF;;;;;;;;;;;;;;;;;;;;;;;;;;ACRF;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;ACP5D,MAAM,YAAY;IALzB;QASE,UAAK,GAAG,SAAS,CAAC;KAYnB;IATC,IAAI,CAAC,KAAK;QACR,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,KAAK,CAAC;IAC1C,CAAC;IAED,KAAK,CAAC,KAAK;QACT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;IAEpB,CAAC;;wEAdU,YAAY;4FAAZ,YAAY;;;;;;QCRzB,sEAAK;QACH,oFAA2E;QAAxB,6LAAuB;QAAC,4DAAc;QAC3F,4DAAM;QACN,2EAOI;QADA,2IAAU,gBAAY,IAAC;QAN3B,4DAOI;QACJ,4EAAgC;QAAxB,0IAAS,iBAAa,IAAC;QAAC,gEAAK;QAAA,4DAAS;;QAVtB,0DAAa;QAAb,sEAAa;;;;;;;;;;;;;;ACArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACgB;AACA;AACP;;AAiBjD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YALJ;YACP,qEAAgB;YAChB,uEAAa;YACb,oEAAgB;SACjB;mIAIU,SAAS,mBAZlB,2DAAY;QACZ,2EAAQ;QACR,2EAAgB,aAGhB,qEAAgB;QAChB,uEAAa;QACb,oEAAgB;;;;;;;;;;;;;;;;;;;ACbb,MAAM,QAAQ;IAEnB,YAAsB,SAAuB;QAAvB,cAAS,GAAT,SAAS,CAAc;IAAG,CAAC;IAE3C,SAAS,CAAC,KAAU,EAAE,IAAY;QACtC,QAAQ,IAAI,EAAE;YACf,KAAK,MAAM,CAAC,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;YAClE,KAAK,OAAO,CAAC,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;YACpE,KAAK,QAAQ,CAAC,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC,KAAK,CAAC,CAAC;YACtE,KAAK,KAAK,CAAC,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YAChE,KAAK,aAAa,CAAC,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,KAAK,CAAC,CAAC;YAChF,OAAO,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,gCAAgC,IAAI,EAAE,CAAC,CAAC;SACjE;IACD,CAAC;;gEAbU,QAAQ;kGAAR,QAAQ;;;;;;;;;;;;;ACLrB;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACPuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SecurityContext, SimpleChange, SimpleChanges, ViewChild } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport Cropper from 'cropperjs';\n\n\n\n@Component({\n  selector: 'app-cropper',\n  templateUrl: './cropper.component.html',\n})\nexport class CropperComponent implements OnInit, AfterViewInit, OnChanges {\n\n  private cropper: Cropper;\n\n  @ViewChild(\"cropper\", { static: false }) imageElement: ElementRef;\n\n  @Input() imageSource: HTMLImageElement;\n  // @Input(\"src\") imageSource: string | SafeUrl;\n  @Input(\"width\") width;\n  @Input(\"height\") height;\n\n  @Input() cropperOptions: Object;\n\n  @Output() imageSourceChange: EventEmitter<any> = new EventEmitter();\n\n  imageDestination: string;\n\n  imageConfig = {};\n\n  data;\n\n  constructor(private sanitization: DomSanitizer) {\n    this.imageDestination = '';\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes && changes['clear']) {\n      this.imageSource = null\n    }\n  }\n\n  ngAfterViewInit(): void {\n\n    this.cropper = new Cropper(this.imageElement.nativeElement, {\n      zoomable: true,\n      scalable: false,\n      aspectRatio: 1,\n      cropBoxResizable: true,\n      cropBoxMovable: true,\n      dragMode: \"move\",\n      viewMode: 3,\n      crop: () => {\n        const canvas = this.cropper.getCroppedCanvas();\n        this.imageDestination = canvas.toDataURL();\n        this.data = this.cropper.getCropBoxData();\n      },\n    });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n\n\n  fileChangeEvent(event: any): void {\n    // this.imageSource = URL.createObjectURL(event.target.files[0]);\n    // this.imageElement.nativeElement = event.target.files[0];\n    /**\n     *  quello buono!\n     */\n    let fileInput = event.target.files[0];\n    var reader = new FileReader();\n    reader.readAsDataURL(fileInput);\n    reader.onloadend = function (e) {\n      var image = new Image();\n      image.src = e.target.result as string;\n      image.onload = function (ev) {\n        let canvas = <HTMLCanvasElement>document.getElementById('canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        var ctx = canvas.getContext('2d');\n        ctx.drawImage(image, 0, 0);\n        new Cropper(canvas)\n      }\n    }\n  }\n}\n","<!-- <div [style.height.px]=\"height\" [style.width.px]=\"width\" style=\"display: flex\"> -->\n<div>\n  <div>\n    <img #cropper [src]=\"imageSource | safe: 'url'\" crossorigin=\"anonymous\"/>\n  </div>\n  <div>\n    <img [src]=\"imageDestination\" />\n    {{ data | json }}\n  </div>\n  <canvas id= \"canvas\"></canvas>\n  <!-- <input\n    type=\"file\"\n    class=\"sr-only\"\n    id=\"inputImage\"\n    name=\"file\"\n    accept=\"image/*\"\n    (change)=\"fileChangeEvent($event)\"\n  />\n</div> -->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { CropperComponent } from './cropper/cropper.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  @ViewChild(\"cropper\", {static: false}) imageElement: CropperComponent;\n\n  image = undefined;\n\n\n  open(event) {\n    this.imageElement.fileChangeEvent(event)\n  }\n\n  clear(event) {\n    console.log(event)\n\n  }\n\n}\n","<div>\n  <app-cropper #cropper [width]=\"200\" [height]=\"400\" [(imageSource)]=\"image\"></app-cropper>\n</div>\n<input\n    type=\"file\"\n    class=\"sr-only\"\n    id=\"inputImage\"\n    name=\"file\"\n    accept=\"image/*\"\n    (change)=\"open($event)\"\n  />\n<button (click)=\"clear($event)\">CLEAR</button>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CropperComponent } from './cropper/cropper.component';\nimport { SafePipe } from './shared/pipes/safaresourceurl.pipe';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SafePipe,\n    CropperComponent,\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n  name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n  constructor(protected sanitizer: DomSanitizer) {}\r\n\r\n public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n    switch (type) {\r\n\t\t\tcase 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\r\n\t\t\tcase 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\r\n\t\t\tcase 'script': return this.sanitizer.bypassSecurityTrustScript(value);\r\n\t\t\tcase 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\r\n\t\t\tcase 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n\t\t\tdefault: throw new Error(`Invalid safe type specified: ${type}`);\r\n\t\t}\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}